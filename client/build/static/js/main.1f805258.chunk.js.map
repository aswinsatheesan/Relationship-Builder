{"version":3,"sources":["components/EditPerson.js","components/People.js","components/EditTag.js","components/Tags.js","components/EditRelation.js","components/Relationship.js","components/FindRelation.js","App.js","index.js"],"names":["EditPerson","item","update","useState","name","person","setPerson","modal","setModal","toggle","updatePerson","e","a","preventDefault","body","fetch","pid","method","headers","JSON","stringify","console","error","message","Button","onClick","color","Modal","isOpen","ModalHeader","Form","onSubmit","ModalBody","FormGroup","Label","Input","value","onChange","target","type","ModalFooter","ListPeople","data","setData","setUpdate","onSubmitForm","match","document","getElementById","classList","add","setTimeout","remove","flag","forEach","toLowerCase","alert","getPeople","res","json","jsonData","deletePerson","id","window","location","useEffect","className","style","marginRight","borderRadius","Table","width","map","EditTag","tag","setTag","updateTag","tid","ListTags","getTags","deleteTag","marginTop","EditRelation","tags","setTags","rid","Row","Col","firstperson","disabled","secondperson","ListRelations","people","setPeople","fperson","setFperson","sperson","setSperson","update2","setUpdate2","relations","setRelations","getRelations","deleteRelation","person1","person2","maxheight","md","filter","FindRelation","output","setOutput","p1","p2","ptemp","tempArray","i","relationsTemp","outputrel","length","push","e1","pop","height","out","margin","App","People","Tags","Relationship","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.1f805258.chunk.js","sourcesContent":["import React, { useState, Fragment } from \"react\";\r\nimport {\r\n  Modal,\r\n  ModalBody,\r\n  ModalHeader,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  ModalFooter,\r\n  Button,\r\n} from \"reactstrap\";\r\n\r\nconst EditPerson = ({ item, update }) => {\r\n  const [person, setPerson] = useState(item.name);\r\n  const [modal, setModal] = useState(false);\r\n  const toggle = () => setModal(!modal);\r\n\r\n  const updatePerson = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const body = { name: person };\r\n      await fetch(`http://localhost:5000/person/${item.pid}`, {\r\n        method: \"PUT\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(body),\r\n      });\r\n      update();\r\n    } catch (error) {\r\n      console.error(error.message);\r\n    }\r\n    toggle();\r\n  };\r\n  return (\r\n    <Fragment>\r\n      <Button\r\n        onClick={() => {\r\n          toggle();\r\n        }}\r\n        color=\"warning\"\r\n      >\r\n        Edit\r\n      </Button>\r\n      <Modal isOpen={modal} toggle={toggle}>\r\n        <ModalHeader toggle={toggle}>Edit Person</ModalHeader>\r\n        <Form onSubmit={updatePerson}>\r\n          <ModalBody>\r\n            <FormGroup>\r\n              <Label>Enter New Name</Label>\r\n              <Input\r\n                value={person}\r\n                onChange={(e) => setPerson(e.target.value)}\r\n                type=\"text\"\r\n                name=\"name\"\r\n              ></Input>\r\n            </FormGroup>\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button type=\"submit\" color=\"warning\">\r\n              Edit\r\n            </Button>\r\n            <Button color=\"secondary\" onClick={toggle}>\r\n              Cancel\r\n            </Button>\r\n          </ModalFooter>\r\n        </Form>\r\n      </Modal>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default EditPerson;","import React,{ Fragment, useState, useEffect} from \"react\";\r\nimport { Button, Form, Input, Table, Alert } from \"reactstrap\";\r\nimport EditPerson from \"./EditPerson\";\r\n\r\nconst ListPeople = () => {\r\n\r\n    const [person,setPerson] = useState(\"\");\r\n    const [data,setData] = useState([]);\r\n    const [update,setUpdate] = useState(0);\r\n\r\n    const onSubmitForm = async e => {\r\n        e.preventDefault();\r\n        try {\r\n            if(person.match(\"^[ ]*$\")!=null){\r\n                document.getElementById(\"input\").classList.add(\"iperror\");\r\n                setTimeout(function(){ document.getElementById(\"input\").classList.remove(\"iperror\"); }, 2000);\r\n            }else{\r\n            let flag=false;\r\n            data.forEach((e)=>{\r\n                if(e.name.toLowerCase()==person.toLowerCase()){\r\n                    flag=true;\r\n                }\r\n            });\r\n            if(flag==false){\r\n            const body = { person };\r\n            await fetch(\"http://localhost:5000/person\", {\r\n                method: \"POST\",\r\n                headers: { \"Content-Type\": \"application/json\" },\r\n                body: JSON.stringify(body),\r\n              });\r\n              setPerson('');\r\n              setUpdate(update+1);\r\n        }else{\r\n            alert(\"Person \"+person+\" already exists!!!\");\r\n            setPerson(\"\");\r\n        }\r\n    }\r\n        } catch (err) {\r\n            console.error(err.message);\r\n        }\r\n    }\r\n\r\n    \r\n    const getPeople = async () => {\r\n        try {\r\n          const res = await fetch(\"http://localhost:5000/person\");\r\n          const jsonData = await res.json();\r\n          setData(jsonData);\r\n        } catch (error) {\r\n          console.error(error.message);\r\n        }\r\n      };\r\n\r\n      const deletePerson = async (id) => {\r\n          try {\r\n            await fetch(`http://localhost:5000/person/${id}`, {\r\n                method: \"DELETE\",\r\n              });\r\n              window.location= \"/\";\r\n          } catch (error) {\r\n              console.error(error.message);\r\n          }\r\n        \r\n      };\r\n      useEffect(()=>{\r\n        getPeople();\r\n    },[update]);\r\n\r\n  \r\n\r\n    return(\r\n        <Fragment>\r\n            <h4 className=\" mt-5 text\">&lt;&gt;People&lt;/&gt;</h4>\r\n            <Form className=\"d-flex mt-3 mb-3 input-group\" onSubmit={onSubmitForm}>\r\n                <Input id=\"input\" style={{marginRight:'20px',borderRadius:'5px'}} type=\"text\" value={person} onChange={e => {\r\n                    if(e.target.value.match(\"^[a-zA-Z ]*$\")!=null)\r\n                    setPerson(e.target.value)}}/>\r\n                <Button style={{borderRadius:'5px'}} className=\"btn btn-success \">Add Person</Button> \r\n            </Form>\r\n            <div className=\"tablebody\">\r\n            <Table className=\"text-center\">\r\n            <col width=\"100\"/>\r\n            <col width=\"100\"/>\r\n                <col width=\"100\"/>\r\n                <col width=\"100\"/>\r\n            <tr className=\"tableheading\">\r\n                        <th className=\"tableheading\">ID</th>\r\n                        <th className=\"tableheading\">Name</th>\r\n                        <th className=\"tableheading\">Edit</th>\r\n                        <th className=\"tableheading\">Delete</th>\r\n                    </tr>\r\n                <tbody>\r\n                    {data.map((item) => {\r\n                        return (\r\n                            <tr key={item.pid}>\r\n                                <td>{item.pid}</td>\r\n                                <td>{item.name}</td>\r\n                                <td>\r\n                                    <EditPerson \r\n                                     update={() => window.location=\"/\"}\r\n                                     item={item}\r\n                                    />\r\n                                </td>\r\n                                <td>\r\n                                    <Button\r\n                                    onClick={() => {\r\n                                    deletePerson(item.pid);\r\n                                    }}\r\n                                    color=\"danger\"\r\n                                    >\r\n                                    Delete\r\n                                    </Button>\r\n                                </td>\r\n                            </tr>\r\n                        );\r\n                    })}\r\n                </tbody>\r\n            </Table>\r\n            </div> \r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ListPeople;\r\n\r\n\r\n  ","import React, { useState, Fragment } from \"react\";\r\nimport {\r\n  Modal,\r\n  ModalBody,\r\n  ModalHeader,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  ModalFooter,\r\n  Button,\r\n} from \"reactstrap\";\r\n\r\nconst EditTag = ({ item, update }) => {\r\n  const [tag, setTag] = useState(item.tag);\r\n  const [modal, setModal] = useState(false);\r\n  const toggle = () => setModal(!modal);\r\n\r\n  const updateTag = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const body = { tag };\r\n      await fetch(`http://localhost:5000/tags/${item.tid}`, {\r\n        method: \"PUT\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(body),\r\n      });\r\n      update();\r\n    } catch (error) {\r\n      console.error(error.message);\r\n    }\r\n    toggle();\r\n  };\r\n  return (\r\n    <Fragment>\r\n      <Button\r\n        onClick={() => {\r\n          toggle();\r\n        }}\r\n        color=\"warning\"\r\n      >\r\n        Edit\r\n      </Button>\r\n      <Modal isOpen={modal} toggle={toggle}>\r\n        <ModalHeader toggle={toggle}>Edit Tag</ModalHeader>\r\n        <Form onSubmit={updateTag}>\r\n          <ModalBody>\r\n            <FormGroup>\r\n              <Label>Enter New Tag</Label>\r\n              <Input\r\n                value={tag}\r\n                onChange={(e) => setTag(e.target.value)}\r\n                type=\"text\"\r\n                name=\"name\"\r\n              ></Input>\r\n            </FormGroup>\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button type=\"submit\" color=\"warning\">\r\n              Edit\r\n            </Button>\r\n            <Button color=\"secondary\" onClick={toggle}>\r\n              Cancel\r\n            </Button>\r\n          </ModalFooter>\r\n        </Form>\r\n      </Modal>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default EditTag;","import React,{ Fragment, useState, useEffect} from \"react\";\r\nimport { Button, Form, Input, Table } from \"reactstrap\";\r\nimport EditTag from \"./EditTag\";\r\n\r\nconst ListTags = () => {\r\n\r\n    const [tag,setTag] = useState(\"\");\r\n    const [data,setData] = useState([]);\r\n    const [update,setUpdate] = useState(0);\r\n\r\n    const onSubmitForm = async e => {\r\n        e.preventDefault();\r\n        try {\r\n            if(tag.match(\"^[ ]*$\")!=null){\r\n                document.getElementById(\"input2\").classList.add(\"iperror\");\r\n                setTimeout(function(){ document.getElementById(\"input2\").classList.remove(\"iperror\"); }, 2000);\r\n            }else{\r\n            let flag=false;\r\n            data.forEach((e)=>{\r\n                if(e.tag.toLowerCase()==tag.toLowerCase()) flag=true;\r\n            });\r\n            if(flag==false){\r\n            const body = { tag };\r\n            if(tag!==\"\"){\r\n            await fetch(\"http://localhost:5000/tags\", {\r\n                method: \"POST\",\r\n                headers: { \"Content-Type\": \"application/json\" },\r\n                body: JSON.stringify(body),\r\n              });\r\n              setTag('');\r\n              setUpdate(update+1);\r\n            }\r\n        }\r\n        else{\r\n            alert(\"Tag \"+tag+\" already exists!!!\");\r\n        }\r\n    }\r\n        } catch (err) {\r\n            console.error(err.message);\r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        getTags();\r\n    },[update]);\r\n\r\n    const getTags = async () => {\r\n        try {\r\n          const res = await fetch(\"http://localhost:5000/tags\");\r\n          const jsonData = await res.json();\r\n          setData(jsonData);\r\n        } catch (error) {\r\n          console.error(error.message);\r\n        }\r\n      };\r\n\r\n      const deleteTag = async (id) => {\r\n          try {\r\n            await fetch(`http://localhost:5000/tags/${id}`, {\r\n                method: \"DELETE\",\r\n              }); \r\n              window.location = \"/\";\r\n          } catch (error) {\r\n              console.error(error.message);\r\n          }\r\n        \r\n      };\r\n\r\n    return(\r\n        <Fragment>\r\n            <h4 className=\"  text\" style={{marginTop:\"70px\"}}>&lt;&gt;Tags&lt;/&gt;</h4>\r\n            <Form className=\"d-flex mt-3 mb-3 input-group\" onSubmit={onSubmitForm}>\r\n                <Input id=\"input2\" style={{marginRight:'20px',borderRadius:'5px'}} type=\"text\" value={tag} onChange={e =>{ \r\n                    if(e.target.value.match(\"^[]?[a-zA-Z]*$\")!=null)\r\n                    setTag(e.target.value)}}/>\r\n                <Button style={{borderRadius:'5px'}} className=\"btn btn-success \">Add Tag</Button> \r\n            </Form>\r\n            <div className=\"tablebody\">\r\n            <Table className=\"text-center\">\r\n            <col width=\"100\"/>\r\n            <col width=\"100\"/>\r\n                <col width=\"100\"/>\r\n                <col width=\"100\"/>\r\n            <tr className=\"tableheading\">\r\n                        <th className=\"tableheading\">ID</th>\r\n                        <th className=\"tableheading\">Tag</th>\r\n                        <th className=\"tableheading\">Edit</th>\r\n                        <th className=\"tableheading\">Delete</th>\r\n                    </tr>\r\n                <tbody>\r\n                    {data.map((item) => {\r\n                        return (\r\n                            <tr key={item.tid}>\r\n                                <td>{item.tid}</td>\r\n                                <td>{item.tag}</td>\r\n                                <td>\r\n                                    <EditTag\r\n                                    update={() => window.location=\"/\"}\r\n                                    item={item}\r\n                                    />\r\n                                </td>\r\n                                <td>\r\n                                    <Button\r\n                                    onClick={() => {\r\n                                    deleteTag(item.tid);\r\n                                    }}\r\n                                    color=\"danger\"\r\n                                    >\r\n                                    Delete\r\n                                    </Button>\r\n                                </td>\r\n                            </tr>\r\n                        );\r\n                    })}\r\n                </tbody>\r\n            </Table>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ListTags;","import React, { useState, Fragment } from \"react\";\r\nimport {\r\n  Modal,\r\n  ModalBody,\r\n  ModalHeader,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  ModalFooter,\r\n  Button,\r\n  Row,\r\n  Col,\r\n} from \"reactstrap\";\r\n\r\nconst EditRelation = ({ item, update }) => {\r\n  const [tag, setTag] = useState(item.tag);\r\n  const [modal, setModal] = useState(false);\r\n  const [tags, setTags] = useState([]);\r\n  const toggle = () => setModal(!modal);\r\n\r\n  const getTags = async () => {\r\n    try {\r\n      const res = await fetch(\"http://localhost:5000/tags\");\r\n      const jsonData = await res.json();\r\n      setTags(jsonData);\r\n    } catch (error) {\r\n      console.error(error.message);\r\n    }\r\n  };\r\n\r\n  const updateTag = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const body = { tag };\r\n      await fetch(`http://localhost:5000/relations/${item.rid}`, {\r\n        method: \"PUT\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(body),\r\n      });\r\n      update();\r\n    } catch (error) {\r\n      console.error(error.message);\r\n    }\r\n    toggle();\r\n  };\r\n  return (\r\n    <Fragment>\r\n      <Button\r\n        onClick={() => {\r\n          toggle();\r\n          getTags();\r\n        }}\r\n        color=\"warning\"\r\n      >\r\n        Edit\r\n      </Button>\r\n      <Modal isOpen={modal} toggle={toggle}>\r\n        <ModalHeader toggle={toggle}>Change Relation</ModalHeader>\r\n        <Form onSubmit={updateTag}>\r\n          <ModalBody>\r\n            <FormGroup>\r\n              <Row>\r\n                <Col>\r\n                  <Label>First Person</Label>\r\n                </Col>\r\n                <Col>\r\n                  <Label>Choose Relation</Label>\r\n                </Col>\r\n                <Col>\r\n                  <Label>Second Person</Label>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col>\r\n                  <Input type=\"text\" value={item.firstperson} disabled></Input>\r\n                </Col>\r\n                <Col>\r\n                  <Input\r\n                    value={tag}\r\n                    onChange={(e) => setTag(e.target.value)}\r\n                    name=\"tag\"\r\n                    type=\"select\"\r\n                  >\r\n                    {tags.map((item) => (\r\n                      <option key={item.tid} value={item.tag}>\r\n                        {item.tag}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                </Col>\r\n                <Col>\r\n                  <Input type=\"text\" value={item.secondperson} disabled></Input>\r\n                </Col>\r\n              </Row>\r\n            </FormGroup>\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button type=\"submit\" color=\"warning\">\r\n              Edit\r\n            </Button>\r\n            <Button color=\"secondary\" onClick={toggle}>\r\n              Cancel\r\n            </Button>\r\n          </ModalFooter>\r\n        </Form>\r\n      </Modal>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default EditRelation;\r\n","import React,{ Fragment, useState, useEffect} from \"react\";\r\nimport { Button, Form, Input, Table, Col, Row } from \"reactstrap\";\r\nimport EditRelation from \"./EditRelation\";\r\n\r\nconst ListRelations = () => {\r\n    const [people, setPeople] = useState([]);\r\n    const [tags, setTags] = useState([]);\r\n    const [fperson, setFperson] = useState(\"\");\r\n    const [sperson, setSperson] = useState(\"\");\r\n    const [tag, setTag] = useState(\"\");\r\n    const [update, setUpdate] = useState(0);\r\n    const [update2, setUpdate2] = useState(0);\r\n    const [relations,setRelations] = useState([]);\r\n\r\n    useEffect(()=>{\r\n        getPeople();\r\n        getTags();\r\n    },[update]);\r\n\r\n    useEffect(()=>{\r\n        getRelations();\r\n    },[update2]);\r\n\r\n    const getPeople = async () => {\r\n        try {\r\n          const res = await fetch(\"http://localhost:5000/person\");\r\n          const jsonData = await res.json();\r\n          setPeople(jsonData);\r\n        } catch (error) {\r\n          console.error(error.message);\r\n        }\r\n      };\r\n    const getTags = async () => {\r\n        try {\r\n          const res = await fetch(\"http://localhost:5000/tags\");\r\n          const jsonData = await res.json();\r\n          setTags(jsonData);\r\n        } catch (error) {\r\n          console.error(error.message);\r\n        }\r\n      };\r\n      const getRelations = async () => {\r\n        try {\r\n          const res = await fetch(\"http://localhost:5000/relations\");\r\n          const jsonData = await res.json();\r\n          setRelations(jsonData);\r\n        } catch (error) {\r\n          console.error(error.message);\r\n        }\r\n      };\r\n   \r\n      const deleteRelation = async (id) => {\r\n        try {\r\n           await fetch(`http://localhost:5000/relations/${id}`,{\r\n            method:\"DELETE\",\r\n          });\r\n          setUpdate2(update2+1);\r\n        } catch (error) {\r\n          console.error(error.message);\r\n        }\r\n      }\r\n\r\n    const onSubmitForm =async(e)=>{\r\n        e.preventDefault();\r\n        try {\r\n          if(fperson==\"\" || sperson==\"\" || tag==\"\"){\r\n            if(fperson==\"\"){\r\n              document.getElementById(\"input3\").classList.add(\"iperror\");\r\n              setTimeout(function(){ document.getElementById(\"input3\").classList.remove(\"iperror\"); }, 2000);\r\n            }\r\n            if(sperson==\"\"){\r\n              document.getElementById(\"input4\").classList.add(\"iperror\");\r\n              setTimeout(function(){ document.getElementById(\"input4\").classList.remove(\"iperror\"); }, 2000);\r\n            }\r\n            if(tag==\"\"){\r\n              document.getElementById(\"input5\").classList.add(\"iperror\");\r\n              setTimeout(function(){ document.getElementById(\"input5\").classList.remove(\"iperror\"); }, 2000);\r\n            }\r\n          }else{\r\n          let flag=false;\r\n          relations.forEach((e)=>{\r\n            if((e.firstperson.toLowerCase()==fperson.toLowerCase() && e.secondperson.toLowerCase()==sperson.toLowerCase() )||(e.firstperson.toLowerCase()==sperson.toLowerCase() && e.secondperson.toLowerCase()==fperson.toLowerCase())) flag=true;\r\n          });\r\n          if(flag==false){\r\n            const body = {person1 : fperson,person2 : sperson,tag : tag};\r\n            await fetch(\"http://localhost:5000/relations\",{\r\n                method: \"POST\",\r\n                headers: { \"Content-Type\" : \"application/json\"},\r\n                body: JSON.stringify(body),\r\n            });\r\n            setFperson(\"\");\r\n            setSperson(\"\");\r\n            setTag(\"\");\r\n            setUpdate2(update2+1);\r\n          }else{\r\n          alert(\"Relation between \"+fperson+\" and \"+sperson+\" already exists!!!\");\r\n        }\r\n      }\r\n        } catch (error) {\r\n            console.error(error.message);\r\n        }\r\n    }\r\n    return(\r\n        <Fragment>\r\n        <h4 className=\"text\" style={{marginTop:\"70px\"}}>&lt;&gt;Relations&lt;/&gt;</h4>\r\n        <Form  style={{maxheight:'200px'}} className=\"mt-3\" onSubmit={onSubmitForm}>\r\n          <Row>\r\n            <Col md=\"4\" className=\"d-flex\">\r\n            <Input id=\"input3\"\r\n              value={fperson}\r\n              onChange={(e) => setFperson(e.target.value)} onClick={()=>setUpdate(update+1)}\r\n              name=\"first person\"\r\n              type=\"select\"\r\n              >\r\n              <option value=\"\">Select Person 1</option>\r\n                {people.filter((person)=>person.name!==sperson).map((item) => (\r\n                <option\r\n                key={item.pid}\r\n                value={item.name}\r\n                >\r\n                  {item.name}\r\n              </option>\r\n                ))}\r\n            </Input>\r\n            </Col>\r\n            <Col md=\"4\" className=\"d-flex\">\r\n            <Input id=\"input4\"\r\n              value={sperson}\r\n              onChange={(e) => setSperson(e.target.value)} onClick={()=>setUpdate(update+1)}\r\n              name=\"second person\"\r\n              type=\"select\"\r\n              >\r\n              <option value=\"\">Select Person 2</option>\r\n                {people.filter((person)=>person.name!==fperson).map((item) => (\r\n                <option\r\n                key={item.pid}\r\n                value={item.name}\r\n                >\r\n                  {item.name}\r\n              </option>\r\n                ))}\r\n            </Input>\r\n            </Col>\r\n            <Col md=\"2\" className=\"d-flex\">\r\n            <Input id=\"input5\"\r\n              value={tag}\r\n              onChange={(e) => setTag(e.target.value)} onClick={()=>setUpdate(update+1)}\r\n              name=\"tag\"\r\n              type=\"select\"\r\n              >\r\n              <option value=\"\">Choose a Tag</option>\r\n                {tags.map((item) => (\r\n                <option\r\n                key={item.tid}\r\n                value={item.tag}\r\n                >\r\n                  {item.tag}\r\n              </option>\r\n                ))}\r\n            </Input>\r\n            </Col>\r\n            <Col md=\"2\" className=\"d-flex\">\r\n            <Button style={{borderRadius:'5px',width:\"100%\"}} className=\"btn btn-success \">Add Relation</Button>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n        <div className=\"tablebody\">\r\n            <Table className=\"text-center\">\r\n            <col width=\"100\"/>\r\n            <col width=\"100\"/>\r\n            <col width=\"100\"/>\r\n                <col width=\"100\"/>\r\n                <col width=\"100\"/>\r\n                <col width=\"100\"/>\r\n            <tr className=\"tableheading\">\r\n                        <th className=\"tableheading\">ID</th>\r\n                        <th className=\"tableheading\">Person 1</th>\r\n                        <th className=\"tableheading\">Person 2</th>\r\n                        <th className=\"tableheading\">Relation</th>\r\n                        <th className=\"tableheading\">Edit</th>\r\n                        <th className=\"tableheading\">Delete</th>\r\n                    </tr>\r\n                <tbody>\r\n                    {relations.map((item) => {\r\n                        return (\r\n                            <tr key={item.rid}>\r\n                              <td>{item.rid}</td>\r\n                                <td>{item.firstperson}</td>\r\n                                <td>{item.secondperson}</td>\r\n                                <td>{item.tag}</td>\r\n                                <td>\r\n                                    <EditRelation\r\n                                    update={() => setUpdate2(update2 + 1)}\r\n                                    item={item}\r\n                                    />\r\n                                </td>\r\n                                <td>\r\n                                    <Button\r\n                                    onClick={() => {\r\n                                    deleteRelation(item.rid);\r\n                                    }}\r\n                                    color=\"danger\"\r\n                                    >\r\n                                    Delete\r\n                                    </Button>\r\n                                </td>\r\n                            </tr>\r\n                        );\r\n                    })}\r\n                </tbody>\r\n            </Table>\r\n            </div>   \r\n        </Fragment>\r\n    )\r\n\r\n}\r\n\r\nexport default ListRelations;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Button, Col, Form, FormGroup, Input, Label, Row } from \"reactstrap\";\r\n\r\nconst FindRelation = () => {\r\n  const [relations, setRelations] = useState([]);\r\n  const [people, setPeople] = useState([]);\r\n  const [fperson, setFperson] = useState(\"\");\r\n  const [sperson, setSperson] = useState(\"\");\r\n  const [update, setUpdate] = useState(0);\r\n  const [output, setOutput] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    getPeople();\r\n    getRelations();\r\n  }, [update]);\r\n\r\n  const getRelations = async () => {\r\n    try {\r\n      const res = await fetch(\"http://localhost:5000/relations\");\r\n      const jsonData = await res.json();\r\n      setRelations(jsonData);\r\n    } catch (error) {\r\n      console.error(error.message);\r\n    }\r\n  };\r\n\r\n  const getPeople = async () => {\r\n    try {\r\n      const res = await fetch(\"http://localhost:5000/person\");\r\n      const jsonData = await res.json();\r\n      setPeople(jsonData);\r\n    } catch (error) {\r\n      console.error(error.message);\r\n    }\r\n  };\r\n  \r\n  let p1 = \"\";\r\n  let p2 = \"\";\r\n  let ptemp = \"\";\r\n  let tempArray = [];\r\n  let i = 0;\r\n  let relationsTemp = [];\r\n  let flag=false;\r\n\r\n  const outputrel = () => {\r\n      if(i==1) return;\r\n    relations.forEach((e) => {\r\n        if(i==1) return;\r\n      if (e.firstperson == p1 && e.secondperson == sperson) {\r\n        if (tempArray[tempArray.length - 1] != p1) {\r\n          tempArray.push(p1);\r\n        }\r\n        tempArray.push(e.secondperson);\r\n        i = 1;\r\n        return;\r\n      } else if (e.secondperson == p1 && e.firstperson == sperson) {\r\n        if (tempArray[tempArray.length - 1] != p1) {\r\n          tempArray.push(p1);\r\n        }\r\n        tempArray.push(e.firstperson);\r\n        i=1;\r\n        return;\r\n      }\r\n    });\r\nif(i==1) return;\r\n\r\n    relations.forEach((e) => { \r\n        if(i==1) return;\r\n      if (\r\n        e.firstperson == p1 &&\r\n        e.secondperson != p2 &&\r\n        e.secondperson != fperson\r\n      ) {\r\n        relationsTemp.forEach((e1)=>{\r\n          if((e.firstperson==e1.firstperson&&e.secondperson==e1.secondperson)||(e.secondperson==e1.firstperson&&e.firstperson==e1.secondperson)){\r\n            flag=true;\r\n          }\r\n        })\r\n        if(flag==false){\r\n          p1 = e.secondperson;\r\n            p2 = e.firstperson;\r\n            tempArray.push(p1);\r\n            relationsTemp.push(e);\r\n            outputrel();\r\n        }\r\n        p2=p1;\r\n        p1=tempArray[tempArray.length-1];\r\n        flag=false;\r\n      } else if (\r\n        e.secondperson == p1 &&\r\n        e.firstperson != p2 &&\r\n        e.firstperson != fperson\r\n      ) {\r\n        relationsTemp.forEach((e1)=>{\r\n          if((e.firstperson==e1.firstperson&&e.secondperson==e1.secondperson)||(e.secondperson==e1.firstperson&&e.firstperson==e1.secondperson)){\r\n            flag=true;\r\n          }\r\n        })\r\n        if(flag==false){\r\n          p1 = e.firstperson;\r\n            p2 = e.secondperson;\r\n            tempArray.push(p1);\r\n            relationsTemp.push(e);\r\n            outputrel();\r\n        }\r\n        p2=p1;\r\n        p1=tempArray[tempArray.length-1];\r\n        flag=false;\r\n      }\r\n      \r\n    });\r\n    if(i==1) return;\r\n    ptemp = p1;\r\n      p1 = p2;\r\n      p2 = ptemp;\r\n      tempArray.pop();\r\n  };\r\n\r\n  const onSubmitForm = (e) => {\r\n    e.preventDefault();\r\n    if(fperson==sperson){\r\n        setOutput(fperson+\" = \"+sperson);\r\n    }else{\r\n    getRelations();\r\n    p1 = fperson;\r\n    p2 = \"\";\r\n    i=0;\r\n    tempArray=[];\r\n    relationsTemp=[];\r\n    flag=false;\r\n    tempArray.push(fperson);\r\n    ptemp=\"\";\r\n    outputrel();\r\n    let out=\"\";\r\n    if(tempArray.length==0){\r\n        setOutput(\"No relation exists between \"+fperson+\" and \"+sperson+\" !\");\r\n    }else{\r\n    for(let i=0;i<tempArray.length;i++){\r\n        if(i==tempArray.length-1){\r\n            out+=tempArray[tempArray.length-1];\r\n        }else{\r\n            out+=tempArray[i]+\" > \";\r\n        }\r\n    }\r\n    setOutput(out);\r\n}\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h4 className=\"text\" style={{marginTop:\"70px\"}}>&lt;&gt;Find Relation&lt;/&gt;</h4>\r\n      <Form\r\n        style={{ height: \"200px\" }}\r\n        className=\"mt-3\"\r\n        onSubmit={onSubmitForm}\r\n      >\r\n        <Row>\r\n          <Col md=\"4\" className=\"d-flex\">\r\n            <Input\r\n              value={fperson}\r\n              onChange={(e) => setFperson(e.target.value)}\r\n              onClick={() => setUpdate(update + 1)}\r\n              name=\"first person\"\r\n              type=\"select\"\r\n            >\r\n              <option value=\"null\">Select Person 1</option>\r\n              {people.map((item) => (\r\n                <option key={item.pid} value={item.name}>\r\n                  {item.name}\r\n                </option>\r\n              ))}\r\n            </Input>\r\n          </Col>\r\n          <Col md=\"4\" className=\"d-flex\">\r\n            <Input\r\n              value={sperson}\r\n              onChange={(e) => setSperson(e.target.value)}\r\n              onClick={() => setUpdate(update + 1)}\r\n              name=\"second person\"\r\n              type=\"select\"\r\n            >\r\n              <option value=\"null\">Select Person 2</option>\r\n              {people.map((item) => (\r\n                <option key={item.pid} value={item.name}>\r\n                  {item.name}\r\n                </option>\r\n              ))}\r\n            </Input>\r\n          </Col>\r\n          <Col md=\"4\" className=\"d-flex\">\r\n            <Button\r\n              style={{ borderRadius: \"5px\", width: \"100%\" }}\r\n              className=\"btn btn-success \"\r\n            >\r\n              Find Relation\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n        <center style={{margin:\"50px\"}}>\r\n          <h3>{output}</h3>\r\n          </center>\r\n      </Form>\r\n      \r\n    </>\r\n  );\r\n};\r\n\r\nexport default FindRelation;\r\n","import React,{Fragment} from \"react\";\nimport './App.css';\nimport './index.css'\n//components\nimport People from \"./components/People\"\nimport Tags from \"./components/Tags\"\nimport Relationship from \"./components/Relationship\"\nimport FindRelation from \"./components/FindRelation\";\n\nfunction App() {\n  return (\n    <Fragment>\n      <div className=\"center\">\n        <h1 className=\"text-center mt-5 text\">Relationship Builder</h1>\n        <People/>\n        <Tags/>\n        <Relationship/>\n        <FindRelation/>\n      </div>\n    </Fragment>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}